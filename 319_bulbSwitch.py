# 一个编号为 x 的灯泡经过 n 轮后处于打开状态的充要条件为「该灯泡被切换状态次数为奇数次」。
# 于是问题转换为：在 [1,n] 内有多少个数，其"约数的个数"为奇数。这些约数个数为奇数的灯泡就是最后亮着的灯泡。
# 某个数的约数个数为奇数，意味着某个约数在分解过程中出现了 2 次,即有 x 为完全平方数
# 问题最终转换为：在 [1,n] 中完全平方数的个数为多少。
class Solution:
    def bulbSwitch(self, n: int) -> int:
        return int(sqrt(n))